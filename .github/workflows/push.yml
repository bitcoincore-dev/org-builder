# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #
  #
  #    name: "GitHub Pages Tests"
  #    runs-on: ubuntu-latest
  #    strategy:
  #      matrix:
  #        ruby:
  #          - 2.5
  #          - 2.6
  #    steps:
  #    - uses: actions/checkout@master
  #    - name: script/cibuild-docker
  #      run: script/cibuild-docker
  #      env:
  #        RUBY_VERSION: ${{ matrix.ruby }}
  #
  #
## Docker Configs
  ubuntu-latest-docker-shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
            make shell

  ubuntu-latest-docker-header:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
            make init header user=root

  ubuntu-latest-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
            make init header run user=root

  ubuntu20-docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
            make init header run user=root

  ubuntu18-docker:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
            make init header run user=root

  ubuntu-latest-debian-latest-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
            make statoshi-debian user=umbrel port=8666 umbrel=true verbose=true nocache=true

### Make Host
#  ubuntu-latest-host:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         make ./host
#
#  ubuntu20-host:
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         make ./host
#
#  ubuntu18-host:
#    runs-on: ubuntu-18.04
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         make ./host

## Cross Compile 
#  ubuntu-latest-build-on-host-cross-compile:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
#         sudo apt install g++-arm-linux-gnueabihf curl
#         make -C depends HOST=arm-linux-gnueabihf NO_QT=1
#         ./autogen.sh
#         ./configure --disable-wallet --disable-tests --disable-bench --disable-docs --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++
#         make
#         make install


