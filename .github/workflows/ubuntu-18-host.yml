# This is a basic workflow to help you get started with Actions

name: ubuntu-18.04-host

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    paths:
      #test
      - '.github/workflows/ubuntu-18-host.yml'

    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main
      #- '!master'   # excludes master
    #branches-ignore:
      #- 'v*'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  github-workspace:
    name: github-workspace
    runs-on: ubuntu-18.04
    steps:
      - name: Print github workspace
        run: |
          echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
          echo "github.workspace = ${{ github.workspace }}"
          echo "pr.ref = ${{github.event.pull_request.head.ref}}"
          echo "github.ref = ${{ github.ref }}"
          echo "$GITHUB_CONTEXT"

# Cross Compile 
  u18-host:
    runs-on: ubuntu-18.04
    steps:
      ## REF: https://githubmemory.com/repo/Gisleburt/cancel-workflow-action
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin
          key: ${{ runner.os }}-top-star-#${{ hashFiles('**/**') }}
          restore-keys: |
            ${{ runner.os }}-top-start

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin
          key: ${{ runner.os }}-db4-tar-#${{ hashFiles('**/tar.gz') }}
          restore-keys: |
            ${{ runner.os }}-db4-tar

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin
          key: ${{ runner.os }}-tar-${{ hashFiles('**/tar**') }}
          restore-keys: |
            ${{ runner.os }}-tar

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin/db4
          key: ${{ runner.os }}-db4-${{ hashFiles('**') }}
          restore-keys: |
            ${{ runner.os }}-db4-

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin/sources
          key: ${{ runner.os }}-depends-source-${{ hashFiles('**/**') }}
          restore-keys: |
            ${{ runner.os }}-depends-

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin/secp256k1
          key: ${{ runner.os }}-secp256k1-${{ hashFiles('**/**') }}
          restore-keys: |
            ${{ runner.os }}-secp256k1-

#src/src_libzmq_la-ipc_listener.lo
      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/bitcoin/src
          key: ${{ runner.os }}-libzmq-${{ hashFiles('**/*zmq*') }}
          restore-keys: |
            ${{ runner.os }}-libzmq-

      - uses: actions/checkout@v2
      - name: Make
        run: |
         sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
         sudo apt install g++-arm-linux-gnueabihf curl
         make -C depends HOST=arm-linux-gnueabihf NO_QT=1
         ./autogen.sh
         ./configure --disable-wallet --disable-tests --disable-bench --disable-docs --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++
         make
         make install

